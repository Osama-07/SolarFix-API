// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolarFix.Data;

#nullable disable

namespace SolarFix.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250329012444_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("SolarFix.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TechnicianId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("SolarFix.Entities.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Rating")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReviewId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Reviews", (string)null);
                });

            modelBuilder.Entity("SolarFix.Entities.Technician", b =>
                {
                    b.Property<int>("TechnicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExperienceYears")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PricePerHour")
                        .HasColumnType("REAL");

                    b.Property<double>("Rating")
                        .HasColumnType("REAL");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TechnicianId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Technicians", (string)null);
                });

            modelBuilder.Entity("SolarFix.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserType")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("SolarFix.Entities.Order", b =>
                {
                    b.HasOne("SolarFix.Entities.User", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SolarFix.Entities.Technician", "Technician")
                        .WithMany("Orders")
                        .HasForeignKey("TechnicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("SolarFix.Entities.Review", b =>
                {
                    b.HasOne("SolarFix.Entities.Order", "Order")
                        .WithOne("Review")
                        .HasForeignKey("SolarFix.Entities.Review", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SolarFix.Entities.Technician", b =>
                {
                    b.HasOne("SolarFix.Entities.User", "User")
                        .WithOne("Technician")
                        .HasForeignKey("SolarFix.Entities.Technician", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SolarFix.Entities.Order", b =>
                {
                    b.Navigation("Review");
                });

            modelBuilder.Entity("SolarFix.Entities.Technician", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SolarFix.Entities.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Technician");
                });
#pragma warning restore 612, 618
        }
    }
}
